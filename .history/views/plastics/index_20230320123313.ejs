<%- include('../includes/index_header.ejs') %>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="https://cdn.rawgit.com/Microsoft/PowerBI-JavaScript/master/dist/powerbi.min.js" type="text/javascript"></script>

    <!-- STATISTIC-->
    <div class="p-t-20">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h3 class="title-5 m-b-35">Plastic Summary</h3>
                    <section class="statistic statistic2">
                        <div class="container">
                            <div class="row">
                                <div class="col-md-6 col-lg-3">
                                    
                                    <div class="statistic__item statistic__item--green">
                                        <center>
                                            <h2 class="number"><%= totalWeight %></h2>
                                            <span class="desc">Total Weight in KG</span>
                                        </center>
                                        <div class="icon">
                                            <i class="zmdi zmdi-account-o"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-lg-3">
                                    <div class="statistic__item statistic__item--orange">
                                        <center>
                                            <h2 class="number"><%= totalBottle %></h2>
                                            <span class="desc">Total Bottles</span>
                                        </center>
                                        <div class="icon">
                                            <i class="zmdi zmdi-shopping-cart"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-lg-3">
                                    <div class="statistic__item statistic__item--blue">
                                        <center>
                                            <h2 class="number"><%= totalZone %></h2>
                                            <span class="desc">Total Zones</span>
                                        </center>
                                        <div class="icon">
                                            <i class="zmdi zmdi-calendar-note"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-lg-3">
                                    <div class="statistic__item statistic__item--red">
                                        <center>
                                            <h2 class="number"><%= totalProduct %></h2>
                                            <span class="desc">Total Products</span>
                                        </center>
                                        <div class="icon">
                                            <i class="zmdi zmdi-money"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                    </div>
            </div>
        </div>
    </div>
    <!-- END STATISTIC-->

    <!-- STATISTIC CHART-->
    <% if(user.chart1 !== '' && user.chart1 !== null) { %>
        <!-- <section class="statistic-chart">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="title-5 m-b-35">Analysis</h3>
                    </div>
                </div>
                <div class="row">
                    <div id="Container" style="overflow:hidden; width: 100%; height: 373;">
                        <iframe width="100%" height="373.5" src=<%=user.chart1 %>
                            frameborder="0" allowFullScreen="false"></iframe>
                    </div>
                </div>
            </div>
        </section> -->
        <!-- END STATISTIC CHART -->
        <center>
            <a href="/chart">
                <button class="au-btn au-btn-icon au-btn--green au-btn--small"> more analysis</button>
            </a>
        </center>
    <% } %>

    <!-- DATA TABLE-->
    <section class="p-t-20">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h3 class="title-5 m-b-35">Sorting & Crushing Summary</h3>
                    <section class="statistic statistic2">
                        <div class="container">
                            <div class="row">
                                <div class="col-md-6 col-lg-3">
                                    <div class="statistic__item statistic__item--green">
                                        <center>
                                            <h2 class="number"><%= totalCrushWeight %></h2>
                                            <span class="desc">Total Crushed Weight in KG</span>
                                        </center>
                                        <div class="icon">
                                            <i class="zmdi zmdi-account-o"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-lg-3">
                                    <div class="statistic__item statistic__item--orange">
                                        <center>
                                            <h2 class="number"><%= totalCrusFlakeshWeight %></h2>
                                            <span class="desc">Total Crushed Flakes Weight</span>
                                        </center>
                                        <div class="icon">
                                            <i class="zmdi zmdi-shopping-cart"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-lg-3">
                                    <div class="statistic__item statistic__item--blue">
                                        <center>
                                            <h2 class="number"><%= totalCrushCapshWeight %></h2>
                                            <span class="desc">Total Crushed Caps Weight</span>
                                        </center>
                                        <div class="icon">
                                            <i class="zmdi zmdi-calendar-note"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-lg-3">
                                    <div class="statistic__item statistic__item--red">
                                        <center>
                                            <h2 class="number"><%= totalSortsWeight %></h2>
                                            <span class="desc">Total Sorted Weights</span>
                                        </center>
                                        <div class="icon">
                                            <i class="zmdi zmdi-money"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>
    </section>
    <!-- END DATA TABLE-->

    <section class="p-t-20">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h3 class="title-5 m-b-35">Crushing Analysis Summary</h3>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="au-card m-b-30">
                                <div class="au-card-inner">
                                    <h3 class="title-2 m-b-40">Total Crush Flakes Weights</h3>
                                    <canvas id="crushFlakesChart"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="au-card m-b-30">
                                <div class="au-card-inner">
                                    <h3 class="title-2 m-b-40">Total Crush Caps Weights</h3>
                                    <canvas id="singelBarChart2"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>     
                </div>
            </div>
        </div>
    </section>

    <script>
        document.getElementById("allFilter").style.visibility = "visible";
        document.getElementById("retrieved_from").style.visibility = "collapse";
        var selected = '';

        function myFunction(value) {
            selected = value;
        }

        function myFunctionExport(selected) {
            window.location = '/recent/2';
        }

        function myClickFunction() {
            var inputDate = document.getElementById("dateFilter").value
            // const [year, month, day] = inputDate.split("/");
            // const dateChange = `${year}-${month}-${day}`;
        

            const list = ['all', 'retrieved_from', 'plastic_size', 'tonnage', 'product', 'volume_of_plastics', 'initial_content', 'manufacturer'];

            if (list[selected] === 'all') {
                document.getElementById("allFilter").style.visibility = "visible";
                document.getElementById("retrieved_from").style.visibility = "collapse";

            } else if (list[selected] === 'retrieved_from') {

                const table = document.getElementById("retrieved_from_body");
                document.getElementById("retrieved_from").style.visibility = "visible";
                document.getElementById("allFilter").style.visibility = "collapse";
                document.getElementById("headerName").innerText = 'Plastics Retrieved From';

                var tablist = <%- JSON.stringify(tableLimit) %>;
                var newList = tablist.filter((element) => element.date.includes(inputDate));

                $("#retrieved_from_body").empty();
                newList.forEach((element) => {
                    let row = table.insertRow();
                    let retrieved_from = row.insertCell(0);
                    retrieved_from.innerHTML = element.retrieved_from;
                    let date = row.insertCell(1);
                    date.innerHTML = element.date;
                    let action = row.insertCell(2);
                    action.innerHTML = `<div class="table-data-feature ">

                                                <a href='/details/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Edit ">
                                                        <i class="zmdi zmdi-edit "></i>
                                                    </button></a>
                                                <a href='/delete/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Delete ">
                                                        <i class="zmdi zmdi-delete "></i>
                                                    </button></a>

                                            </div>`;
                })
            }else if (list[selected] === 'plastic_size') {
                const table = document.getElementById("retrieved_from_body");
                document.getElementById("retrieved_from").style.visibility = "visible";
                document.getElementById("allFilter").style.visibility = "collapse";
                document.getElementById("headerName").innerText = 'Plastics Size';

                var tablist = <%- JSON.stringify(tableLimit) %>;
                var newList = tablist.filter((element) => element.date.includes(inputDate));
                $("#retrieved_from_body").empty();
                newList.map((element) => {
                    let row = table.insertRow();
                    let retrieved_from = row.insertCell(0);
                    retrieved_from.innerHTML = element.plastic_size;
                    let date = row.insertCell(1);
                    date.innerHTML = element.date;
                    let action = row.insertCell(2);
                    action.innerHTML = `<div class="table-data-feature ">

                                                <a href='/details/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Edit ">
                                                        <i class="zmdi zmdi-edit "></i>
                                                    </button></a>
                                                <a href='/delete/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Delete ">
                                                        <i class="zmdi zmdi-delete "></i>
                                                    </button></a>

                                            </div>`;
                })
            }else if (list[selected] === 'tonnage') {
                const table = document.getElementById("retrieved_from_body");
                document.getElementById("retrieved_from").style.visibility = "visible";
                document.getElementById("allFilter").style.visibility = "collapse";
                document.getElementById("headerName").innerText = 'Tonnage';

                var tablist = <%- JSON.stringify(tableLimit) %>;
                var newList = tablist.filter((element) => element.date.includes(inputDate));
                $("#retrieved_from_body").empty();
                newList.map((element) => {
                    let row = table.insertRow();
                    let retrieved_from = row.insertCell(0);
                    retrieved_from.innerHTML = element.tonnage;
                    let date = row.insertCell(1);
                    date.innerHTML = element.date;
                    let action = row.insertCell(2);
                    action.innerHTML = `<div class="table-data-feature ">

                                                <a href='/details/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Edit ">
                                                        <i class="zmdi zmdi-edit "></i>
                                                    </button></a>
                                                <a href='/delete/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Delete ">
                                                        <i class="zmdi zmdi-delete "></i>
                                                    </button></a>

                                            </div>`;
                })
            }else if (list[selected] === 'product') {
                const table = document.getElementById("retrieved_from_body");
                document.getElementById("retrieved_from").style.visibility = "visible";
                document.getElementById("allFilter").style.visibility = "collapse";
                document.getElementById("headerName").innerText = 'Product';

                var tablist = <%- JSON.stringify(tableLimit) %>;
                var newList = tablist.filter((element) => element.date.includes(inputDate));
                $("#retrieved_from_body").empty();
                newList.map((element) => {
                    let row = table.insertRow();
                    let retrieved_from = row.insertCell(0);
                    retrieved_from.innerHTML = element.product;
                    let date = row.insertCell(1);
                    date.innerHTML = element.date;
                    let action = row.insertCell(2);
                    action.innerHTML = `<div class="table-data-feature ">

                                                <a href='/details/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Edit ">
                                                        <i class="zmdi zmdi-edit "></i>
                                                    </button></a>
                                                <a href='/delete/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Delete ">
                                                        <i class="zmdi zmdi-delete "></i>
                                                    </button></a>

                                            </div>`;
                })
            }else if (list[selected] === 'volume_of_plastics') {
                const table = document.getElementById("retrieved_from_body");
                document.getElementById("retrieved_from").style.visibility = "visible";
                document.getElementById("allFilter").style.visibility = "collapse";
                document.getElementById("headerName").innerText = 'Volume of Plastic';

                var tablist = <%- JSON.stringify(tableLimit) %>;
                var newList = tablist.filter((element) => element.date.includes(inputDate));
                $("#retrieved_from_body").empty();
                newList.map((element) => {
                    let row = table.insertRow();
                    let retrieved_from = row.insertCell(0);
                    retrieved_from.innerHTML = element.volume_of_plastics;
                    let date = row.insertCell(1);
                    date.innerHTML = element.date;
                    let action = row.insertCell(2);
                    action.innerHTML = `<div class="table-data-feature ">

                                                <a href='/details/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Edit ">
                                                        <i class="zmdi zmdi-edit "></i>
                                                    </button></a>
                                                <a href='/delete/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Delete ">
                                                        <i class="zmdi zmdi-delete "></i>
                                                    </button></a>

                                            </div>`;
                })
            }else if (list[selected] === 'initial_content') {
                const table = document.getElementById("retrieved_from_body");
                document.getElementById("retrieved_from").style.visibility = "visible";
                document.getElementById("allFilter").style.visibility = "collapse";
                document.getElementById("headerName").innerText = 'Initial content';

                var tablist = <%- JSON.stringify(tableLimit) %>;
                var newList = tablist.filter((element) => element.date.includes(inputDate));
                $("#retrieved_from_body").empty();
                newList.map((element) => {
                    let row = table.insertRow();
                    let retrieved_from = row.insertCell(0);
                    retrieved_from.innerHTML = element.initial_content;
                    let date = row.insertCell(1);
                    date.innerHTML = element.date;
                    let action = row.insertCell(2);
                    action.innerHTML = `<div class="table-data-feature ">

                                                <a href='/details/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Edit ">
                                                        <i class="zmdi zmdi-edit "></i>
                                                    </button></a>
                                                <a href='/delete/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Delete ">
                                                        <i class="zmdi zmdi-delete "></i>
                                                    </button></a>

                                            </div>`;
                })
            }else if (list[selected] === 'manufacturer') {
                const table = document.getElementById("retrieved_from_body");
                document.getElementById("retrieved_from").style.visibility = "visible";
                document.getElementById("allFilter").style.visibility = "collapse";
                document.getElementById("headerName").innerText = 'Manufactures';

                var tablist = <%- JSON.stringify(tableLimit) %>;
                var newList = tablist.filter((element) => element.date.includes(inputDate));
                $("#retrieved_from_body").empty();
                newList.map((element) => {
                    let row = table.insertRow();
                    let retrieved_from = row.insertCell(0);
                    retrieved_from.innerHTML = element.manufacturer;
                    let date = row.insertCell(1);
                    date.innerHTML = element.date;
                    let action = row.insertCell(2);
                    action.innerHTML = `<div class="table-data-feature ">

                                                <a href='/details?id=${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Edit ">
                                                        <i class="zmdi zmdi-edit "></i>
                                                    </button></a>
                                                <a href='/delete/${element.id}'><button class="item "
                                                        data-toggle="tooltip " data-placement="top " title="Delete ">
                                                        <i class="zmdi zmdi-delete "></i>
                                                    </button></a>

                                            </div>`;
                })
            }

        }
    
    </script>
    <script>
        (function ($) {
            // USE STRICT
            "use strict";
            //   //==================================================================LINE SCROLL====================================================================
              try {
                // single bar chart
                var ctx = document.getElementById("crushFlakesChart");
                if (ctx) {
                  ctx.height = 150;

                  const moveChart = {
                    'id': 'crushFlakesChart',
                    afterEvent(chart, args) {
                      const { ctx, canvas, chartArea: { left, right, top, bottom, width, height } } = chart;

                      canvas.addEventListener('mousemove', (e) => {
                        const x = args.event.x;
                        const y = args.event.y;

                        if (x >= left - 15 && x <= left + 15 && y >= height / 2 + top - 15 && y <= height / 2 + top + 15) {
                          canvas.style.cursor = 'pointer';
                        } else if (x >= right - 15 && x <= right + 15 && y >= height / 2 + top - 15 && y <= height / 2 + top + 15) {
                          canvas.style.cursor = 'pointer';
                        }
                        else {
                          canvas.style.cursor = 'default';
                        }
                      })
                    },
                    afterDraw(chart, args, pluginOptions) {
                      const { ctx, chartArea: { left, right, top, bottom, width, height } } = chart;
                      class CircleArrow {
                        draw(ctx, x1, pixel) {
                          const angle = Math.PI / 180
                          ctx.beginPath();
                          ctx.lineWidth = 3;
                          ctx.strokeStyle = 'rgba(102, 102,102, 0.5)';
                          ctx.fillStyle = 'white';
                          ctx.arc(x1, (height) / 2 + top, 15, angle * 0, angle * 360, false);
                          ctx.stroke();
                          ctx.fill();
                          ctx.closePath();

                          ctx.beginPath();
                          ctx.lineWidth = 2;
                          ctx.strokeStyle = 'rgba(225, 26,104, 0.9)';
                          ctx.moveTo(x1 + pixel, height / 2 + top - 7.5)
                          ctx.lineTo(x1 - pixel, height / 2 + top)
                          ctx.lineTo(x1 + pixel, height / 2 + top + 7.5)
                          ctx.stroke();
                          ctx.closePath();
                        }
                      }
                      let drawCircleLeft = new CircleArrow();
                      drawCircleLeft.draw(ctx, left, 5);

                      let drawCircleRight = new CircleArrow();
                      drawCircleRight.draw(ctx, right, -5);
                    }
                  };

                  var lineChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                      labels: '<%= flakesAnalysis.flakes %>'.split(', '),
                      datasets: [
                        {
                          label: "dataset",
                          data: '<%= flakesAnalysis.values %>'.split(', '),
                          borderColor: "rgba(0, 123, 255, 0.9)",
                          borderWidth: "0",
                          backgroundColor: "rgba(0, 123, 255, 0.5)"
                        },
                        // {
                        //   label: "My Second dataset",
                        //   borderColor: "rgba(225, 123, 255, 0.5)",
                        //   borderWidth: "1",
                        //   backgroundColor: "rgba(225, 123, 255, 0.5)",
                        //   pointHighlightStroke: "rgba(225, 123, 255, 0.5)",
                        //   data: [16, 32, 18, 26, 42, 33, 44, 22, 44, 67, 43, 76, 45, 12, 16, 32, 18, 26, 42, 33, 44,]
                        // }
                      ]
                    },
                    options: {
                      layout: {
                        padding: {
                          right: 16
                        }
                      },
                      legend: {
                        position: 'top',
                        labels: {
                          fontFamily: 'Poppins'
                        }
                      },
                      scales: {
                        x: {
                          min: 0,
                          max: 8,
                        },
                        y: {
                          beginAtZero: true
                        }
                      }
                    },
                    plugins: [moveChart]
                  });

                  function moveScroll() {
                    const { ctx, canvas, chartArea: { left, right, top, bottom, width, height } } = lineChart;
                    canvas.addEventListener('click', (e) => {
                      const rect = canvas.getBoundingClientRect();
                      const x = e.clientX - rect.left;
                      const y = e.clientY - rect.top;
                      if (x >= right - 15 && x <= right + 15 && y >= height / 2 + top - 15 && y <= height / 2 + top + 15) {
                        lineChart.options.scales.x.min = lineChart.options.scales.x.min + 9
                        lineChart.options.scales.x.max = lineChart.options.scales.x.max + 9
                        if (lineChart.options.scales.x.max >= lineChart.data.datasets[0].data.length) {
                          lineChart.options.scales.x.min = lineChart.data.datasets[0].data.length - 9
                          lineChart.options.scales.x.max = lineChart.data.datasets[0].data.length
                        }
                        lineChart.update();
                      } else if (x >= left - 15 && x <= left + 15 && y >= height / 2 + top - 15 && y <= height / 2 + top + 15) {
                        lineChart.options.scales.x.min = lineChart.options.scales.x.min - 9
                        lineChart.options.scales.x.max = lineChart.options.scales.x.max - 9
                        if (lineChart.options.scales.x.min <= 0) {
                          lineChart.options.scales.x.min = 0
                          lineChart.options.scales.x.max = 8
                        }
                        lineChart.update();
                      }
                    })
                  }
                  lineChart.ctx.onClick = moveScroll()
                }

              } catch (error) {
                console.log(error);
              }
            })
    </script>
    <%- include('../includes/index_footer.ejs') %>