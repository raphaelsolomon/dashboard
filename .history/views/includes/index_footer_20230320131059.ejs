<!-- COPYRIGHT-->
<section class="p-t-60 p-b-20">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="copyright">
                    <p>Copyright Â© 2022. All rights reserved. <a href="https://dechconsult.com">Dech Consult
                            Limited</a>.</p>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- END COPYRIGHT-->
</div>

</div>

<!-- Jquery JS-->
<script src="/dashboard/vendor/jquery-3.2.1.min.js"></script>
<!-- Bootstrap JS-->
<script src="/dashboard/vendor/bootstrap-4.1/popper.min.js"></script>
<script src="/dashboard/vendor/bootstrap-4.1/bootstrap.min.js"></script>
<!-- Vendor JS       -->
<script src="/dashboard/vendor/slick/slick.min.js">
</script>
<script src="/dashboard/vendor/wow/wow.min.js"></script>
<script src="/dashboard/vendor/animsition/animsition.min.js"></script>
<script src="/dashboard/vendor/bootstrap-progressbar/bootstrap-progressbar.min.js">
</script>
<script src="/dashboard/vendor/counter-up/jquery.waypoints.min.js"></script>
<script src="/dashboard/vendor/counter-up/jquery.counterup.min.js">
</script>
<script src="/dashboard/vendor/circle-progress/circle-progress.min.js"></script>
<script src="/dashboard/vendor/perfect-scrollbar/perfect-scrollbar.js"></script>
<script src="/dashboard/vendor/chartjs/Chart.bundle.min.js"></script>
<script src="/dashboard/vendor/select2/select2.min.js">
</script>
<% if(isUsed) { %>
    <script src="/dashboard/js/main.js"></script>
<% } else {%>
    <script>
        (function ($) {
            // USE STRICT
            "use strict";
            try {
                    // single bar chart
                    var ctx = document.getElementById("singelBarChart");
                    if (ctx) {
                        ctx.height = 150;

                        const moveChart = {
                            'id': 'singelBarChart',
                            afterEvent(chart, args) {
                                const { ctx, canvas, chartArea: { left, right, top, bottom, width, height } } = chart;

                                canvas.addEventListener('mousemove', (e) => {
                                    const x = args.event.x;
                                    const y = args.event.y;

                                    if (x >= left - 15 && x <= left + 15 && y >= height / 2 + top - 15 && y <= height / 2 + top + 15) {
                                        canvas.style.cursor = 'pointer';
                                    } else if (x >= right - 15 && x <= right + 15 && y >= height / 2 + top - 15 && y <= height / 2 + top + 15) {
                                        canvas.style.cursor = 'pointer';
                                    }
                                    else {
                                        canvas.style.cursor = 'default';
                                    }
                                })
                            },
                            afterDraw(chart, args, pluginOptions) {
                                const { ctx, chartArea: { left, right, top, bottom, width, height } } = chart;

                                class CircleArrow {
                                    draw(ctx, x1, pixel) {
                                        const angle = Math.PI / 180
                                        ctx.beginPath();
                                        ctx.lineWidth = 3;
                                        ctx.strokeStyle = 'rgba(102, 102,102, 0.5)';
                                        ctx.fillStyle = 'white';
                                        ctx.arc(x1, height / 2 + top, 15, angle * 0, angle * 360, false);
                                        ctx.stroke();
                                        ctx.fill();
                                        ctx.closePath();

                                        ctx.beginPath();
                                        ctx.lineWidth = 2;
                                        ctx.strokeStyle = 'rgba(225, 26,104, 0.9)';
                                        ctx.moveTo(x1 + pixel, height / 2 + top - 7.5)
                                        ctx.lineTo(x1 - pixel, height / 2 + top)
                                        ctx.lineTo(x1 + pixel, height / 2 + top + 7.5)
                                        ctx.stroke();
                                        ctx.closePath();
                                    }
                                }
                                let drawCircleLeft = new CircleArrow();
                                drawCircleLeft.draw(ctx, left, 5);

                                let drawCircleRight = new CircleArrow();
                                drawCircleRight.draw(ctx, right, -5);
                            }
                        };

                        var myChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: '<%= (flakesAnalysis.flakes) %>'.split(', '),
                                datasets: [
                                    {
                                        label: "Dataset",
                                        data: '<%= (flakesAnalysis.totals) %>'.split(', '),
                                        borderColor: "rgba(0, 123, 255, 0.9)",
                                        borderWidth: "0",
                                        backgroundColor: "rgba(0, 123, 255, 0.5)"
                                    }
                                ]
                            },
                            options: {
                                layout: {
                                    padding: {
                                        right: 16
                                    }
                                },
                                legend: {
                                    position: 'top',
                                    labels: {
                                        fontFamily: 'Poppins'
                                    }
                                },
                                scales: {
                                    x: {
                                        min: 0,
                                        max: 8,
                                    },
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            },
                            plugins: [moveChart]
                        });

                        function moveScroll() {
                            const { ctx, canvas, chartArea: { left, right, top, bottom, width, height } } = myChart;
                            canvas.addEventListener('click', (e) => {
                                const rect = canvas.getBoundingClientRect();
                                const x = e.clientX - rect.left;
                                const y = e.clientY - rect.top;
                                if (x >= right - 15 && x <= right + 15 && y >= height / 2 + top - 15 && y <= height / 2 + top + 15) {
                                    myChart.options.scales.x.min = myChart.options.scales.x.min + 9
                                    myChart.options.scales.x.max = myChart.options.scales.x.max + 9
                                    if (myChart.options.scales.x.max >= myChart.data.datasets[0].data.length) {
                                        myChart.options.scales.x.min = myChart.data.datasets[0].data.length - 9
                                        myChart.options.scales.x.max = myChart.data.datasets[0].data.length
                                    }
                                    myChart.update();
                                } else if (x >= left - 15 && x <= left + 15 && y >= height / 2 + top - 15 && y <= height / 2 + top + 15) {
                                    myChart.options.scales.x.min = myChart.options.scales.x.min - 9
                                    myChart.options.scales.x.max = myChart.options.scales.x.max - 9
                                    if (myChart.options.scales.x.min <= 0) {
                                        myChart.options.scales.x.min = 0
                                        myChart.options.scales.x.max = 8
                                    }
                                    myChart.update();
                                }
                            })
                        }
                        myChart.ctx.onClick = moveScroll()
                    }

                } catch (error) {
                    console.log(error);
                }
        })(jQuery);
    </script>
<% } %>
</body>

</html>
<!-- end document-->